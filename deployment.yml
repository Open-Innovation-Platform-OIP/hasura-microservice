apiVersion: v1
kind: Service
metadata:
  name: oip-hasura
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: oip-hasura
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oip-hasura
spec:
  selector:
    matchLabels:
      app: oip-hasura
  replicas: 1
  template:
    metadata:
      labels:
        app: oip-hasura
    spec:
      containers:
      - name: oip-hasura
        image: hasura/graphql-engine:v1.0.0
        ports:
        - containerPort: 8080
        env:
          - name: HASURA_GRAPHQL_DATABASE_URL
            value: postgres://postgres:postgres@oip-postgres:80/postgres
          - name: HASURA_GRAPHQL_ENABLE_CONSOLE
            value: "true"
          - name: HASURA_GRAPHQL_ADMIN_SECRET
            value: 1SocialAlpha
          - name: HASURA_GRAPHQL_JWT_SECRET
            value: "{\"type\":\"HS256\",\"key\":\"KECbbhlLlqZaoJyqBARhbSwxkCHoTmTh\"}"
          - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
            value: public
---
apiVersion: v1
kind: Service
metadata:
  name: oip-postgres
spec:
  ports:
  - port: 80
    targetPort: 5432
  selector:
    app: oip-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oip-postgres
spec:
  selector:
    matchLabels:
      app: oip-postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: oip-postgres
    spec:
      volumes:
      - name: db-volume
        persistentVolumeClaim:
          claimName: db-pvc
      containers:
      - name: oip-postgres
        image: postgres:11
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: "/var/lib/postgresql"
          name: db-volume
        env:
          - name: POSTGRES_DB
            value: postgres
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage